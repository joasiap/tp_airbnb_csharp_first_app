@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http
@model ReservationModelView

@{
    var logement = ViewData["logement"] as Logement;
    var reservations = ViewData["reservations"] as Reservation;
    // accès session
    var isUtilisateurAuthentifie = Convert.ToBoolean(HttpContextAccessor.HttpContext.Session.GetInt32("userAuthentifie"));
    var idUtilisateurAuthentifie = Convert.ToInt32(HttpContextAccessor.HttpContext.Session.GetInt32("userId"));

    /*
    // accès cookies
    var isUtilisateurAuthentifieStr = HttpContextAccessor.HttpContext.Request.Cookies["userAuthentifie"];
    var isUtilisateurAuthentifie = Convert.ToBoolean(isUtilisateurAuthentifieStr);
    var idUtilisateurAuthentifie = Convert.ToInt32(HttpContextAccessor.HttpContext.Request.Cookies["userId"]);
    */
}

@Html.Hidden("reservations", reservations)
<div class="container-fluid">
    
    <div class="card mx-auto p-3">
        <div class="card-body">

            <div class="row p-3">
                <div class="text-success">@TempData["messageSucces"]</div>
            </div>

            <h5 class="card-title text-center mb-4">@Html.DisplayFor(modelItem => logement.Titre)</h5>

            @if (isUtilisateurAuthentifie && idUtilisateurAuthentifie != logement.Proprietaire.Id)
            {
                <div class="mb-4">
                    @Html.ActionLink("Message", "Index", "Messages", new { idProprietaire = @logement.Proprietaire.Id }, new { @class = "btn btn-warning" })
                </div>
            }

                <div class="row mb-3">
                    <div class="col-lg-3">Capacité :</div>
                    <div class="col-lg-8">@Html.DisplayFor(modelItem => logement.NbPersonnes) personne(s)</div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">Ville :</div>
                    <div class="col-lg-8">@Html.DisplayFor(modelItem => logement.Adresse.Ville)</div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">Département :</div>
                    <div class="col-lg-8">@Html.DisplayFor(modelItem => logement.Adresse.Departement.Nom)</div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">Description :</div>
                    <div class="col-lg-8">@Html.DisplayFor(modelItem => logement.Description)</div>
                </div>

                @if (isUtilisateurAuthentifie && idUtilisateurAuthentifie != logement.Proprietaire.Id)
                {
                    <div class="row mt-4 mb-2">
                        <div class="font-weight-bold col-lg-12">
                            Réservez pour :
                        </div>
                    </div>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="text-danger">@Html.ValidationSummary(true)</div>

                        <div class="row form-group">
                            <div class="col-lg-3">
                                @Html.LabelFor(model => model.DateDebut, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-lg-8">
                                @Html.EditorFor(model => model.DateDebut)
                            </div>
                            <div class="offset-lg-3 col-lg-8">
                                <div>@Html.ValidationMessageFor(model => model.DateDebut, "", new { @class = "text-danger" })</div>

                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-lg-3">
                                @Html.LabelFor(model => model.DateFin, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-lg-8">
                                @Html.EditorFor(model => model.DateFin)
                            </div>
                            <div class="offset-lg-3 col-lg-8">
                                @Html.ValidationMessageFor(model => model.DateFin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.IdLogement)

                        <div class="mt-5">
                            <input type="submit" value="Réserver" class="btn btn-primary" />
                        </div>
                    }

                }

                <div class="row mt-5">
                    <div class="font-weight-bold col-lg-12">
                        Calendrier de réservations :
                    </div>
                    <div class="text-danger col-lg-12">
                        * périodes d'indisponibilité marquées en rouge
                    </div>
                </div>

                <div id="calendar" class="m-2 p-5"></div>

                <div class="text-center mt-3">
                    @Html.ActionLink("Retour", "Index", "Home", null, new { @class = "btn btn-secondary" })
                </div>

            </div>
       </div>

</div>
<script src="//code.jquery.com/jquery-1.11.3.min.js"></script>

<script src="~/lib/availability-calendar.js"></script>
<script>
    // $(document).ready(function () {
    var tabReservations = new Array();
    let reservations = $('#reservations').val();

    let reservationsjsonArray = JSON.parse(reservations);

    $.each(reservationsjsonArray, function (i, val) {
        let dateDebut = val.DateDebut;
        let dateFin = val.DateFin;
        tabReservations.push({ start: dateDebut.substr(0, dateDebut.indexOf('T')), end: dateFin.substr(0, dateFin.indexOf('T')) });
    })
    var unavailableDates = tabReservations;

    $('#calendar').availabilityCalendar(unavailableDates);

 //   });
</script>